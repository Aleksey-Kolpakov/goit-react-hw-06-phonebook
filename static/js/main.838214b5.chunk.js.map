{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","App.module.css","redux/phonebook/phonebook-actions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","deleteContact","changeFilter","ContactForm","state","name","number","handleChange","target","value","setState","resetForm","createContact","event","preventDefault","props","contacts","find","contact","alert","id","randId","addContactToState","this","className","styles","form","onSubmit","input","type","placeholder","onChange","button","Component","connect","dispatch","phonebookActions","filter","dispatc","e","console","log","visibleContacts","toLowerCase","includes","list","map","item","onClick","App","container","initialState","contactReducer","createReducer","payload","action","filterReducer","defaultmiddleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","middleware","logger","rootReducer","combineReducers","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.838214b5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__3AgZR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__tuXCK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3pclI\",\"App-logo\":\"App_App-logo__1wozw\",\"App-logo-spin\":\"App_App-logo-spin__1nbem\",\"App-header\":\"App_App-header__3K92c\",\"App-link\":\"App_App-link__2-_p4\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('phonebook/addContact');\r\n// const addContact = contact => ({\r\n//     type: actionTypes.ADD,\r\n//     payload: contact\r\n// })\r\nconst deleteContact =createAction('phonebook/deleteContact');\r\n// const deleteContact = id => ({\r\n//     type: actionTypes.DELETE,\r\n//     payload: id\r\n// })\r\nconst changeFilter =createAction('phonebook/change-filter');\r\n// const changeFilter = value => ({\r\n//     type: actionTypes.CHANGE_FILTER,\r\n//     payload: value\r\n// })\r\n\r\nexport default { addContact, deleteContact, changeFilter }","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as randId } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport phonebookActions from '../../redux/phonebook/phonebook-actions'\r\nimport styles from \"./ContactForm.module.css\"\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n    handleChange = ({ target }) => {\r\n        const { name, value } = target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    };\r\n    resetForm = () => {\r\n        this.setState({\r\n            name: '',\r\n            number: ''\r\n        })\r\n    }\r\n    createContact = (event) => {\r\n        event.preventDefault();\r\n        const { name, number } = this.state;\r\n        const isNameExist = this.props.contacts.find(contact => contact.name === name);\r\n        if (isNameExist) {\r\n            alert(`${name} Already Exist`);\r\n            return;\r\n        }\r\n        const id = randId();\r\n        const contact = {\r\n            id,\r\n            name: name,\r\n            number: number\r\n        }\r\n        this.props.addContactToState(contact);\r\n        this.resetForm()\r\n    }\r\n    render() {\r\n        const { name, number } = this.state\r\n        return (\r\n\r\n            <form className={styles.form} onSubmit={this.createContact} >\r\n                <label>\r\n                    Name\r\n            <input\r\n                        className={styles.input}\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Name\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    Phone\r\n            <input\r\n                        className={styles.input}\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Phone\"\r\n                        name=\"number\"\r\n                        value={number}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </label>\r\n                <button className={styles.button} type=\"submit\">Add contact</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    contacts:state.contacts,\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    addContactToState: contact => dispatch(phonebookActions.addContact(contact)),\r\n})\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ContactForm);\r\n\r\nContactForm.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n    addContactToState: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css'\r\nimport { connect } from 'react-redux';\r\nimport phonebookActions from '../../redux/phonebook/phonebook-actions'\r\nconst Filter = ({ filter, handleChange }) => {\r\n\r\n    return (\r\n        <label>\r\n            Find contacts by name\r\n              <input\r\n                className={styles.input}\r\n                type=\"text\"\r\n                name=\"filter\"\r\n                value={filter}\r\n                onChange={handleChange}\r\n            />\r\n        </label>\r\n    );\r\n};\r\nconst mapStateToProps = state => ({\r\n    filter: state.filter\r\n})\r\n\r\nconst mapDispatchToProps = dispatc => ({\r\n    handleChange: e => dispatc(phonebookActions.changeFilter(e.target.value))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\nFilter.propTypes = {\r\n    filter: PropTypes.string.isRequired,\r\n    handleChange: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css'\r\nimport phonebookActions from '../../redux/phonebook/phonebook-actions'\r\n\r\nconst ContactList = ({ visibleContacts, deleteContact }) => {\r\n    return (\r\n        <ul className={styles.list}>\r\n            {visibleContacts.map(contact => (\r\n                <li key={contact.id} className={styles.item}>{contact.name}:{contact.number}\r\n                    <button className={styles.button} type=\"button\" onClick={() => deleteContact(contact.id)}>Delete contact</button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(state);\r\n    const visibleContacts = state.contacts.filter(contact => contact.name.toLowerCase().includes(state.filter.toLowerCase()));\r\n    return ({\r\n        visibleContacts:visibleContacts,\r\n    })\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   deleteContact:id=>dispatch(phonebookActions.deleteContact(id)) \r\n})\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ContactList);\r\n\r\nContactList.propTypes = {\r\n    visibleContacts: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n    deleteContact: PropTypes.func.isRequired\r\n}","import React, { Component } from 'react';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport Filter from './components/Filter/Filter';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport styles from './App.module.css';\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className={styles.container} >\r\n        <h1>Phonebook</h1>\r\n        <ContactForm />\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport phonebookActions from './phonebook-actions'\r\n\r\nconst initialState = {\r\n    contacts: [\r\n        { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n        { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n        { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n        { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n}\r\nexport const contactReducer=createReducer(initialState.contacts, {\r\n  [phonebookActions.addContact]: (state, {payload}) => [payload, ...state],\r\n  [phonebookActions.deleteContact]: (state, action) => state.filter(contact => contact.id !== action.payload),\r\n});\r\n// export const contactReducer = (state = initialState.contacts, { type, payload }) => {\r\n//     switch (type) {\r\n//         case actionTypes.ADD:\r\n//             return [payload, ...state];\r\n//         case actionTypes.DELETE:\r\n//             return state.filter(contact => contact.id !== payload)\r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\nexport const filterReducer = createReducer(initialState.filter, {\r\n    [phonebookActions.changeFilter]: (state, { payload }) => payload,\r\n})\r\n// export const filterReducer = (state = \"\", { type, payload }) => {\r\n//     switch (type) {\r\n//         case actionTypes.CHANGE_FILTER:\r\n//             return payload;\r\n//         default:\r\n//             return state;\r\n//     }\r\n// }","// import { createStore, combineReducers } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension'\r\nimport logger from 'redux-logger';\r\nimport { contactReducer, filterReducer } from './phonebook/phonebook-reducer'\r\nimport { configureStore, getDefaultMiddleware,combineReducers} from '@reduxjs/toolkit'\r\nimport { persistStore, persistReducer,FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER, } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\r\n\r\nconst defaultmiddleware = getDefaultMiddleware({\r\n    serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n});\r\n\r\nconst middleware=[...defaultmiddleware,logger]\r\nconst rootReducer = combineReducers({\r\n    contacts: contactReducer,\r\n    filter: filterReducer\r\n})\r\n\r\nconst persistConfig = {\r\n  key: 'phoneBook',\r\n    storage,\r\n  blacklist: ['filter'],\r\n}\r\nconst persistedReducer=persistReducer(persistConfig, rootReducer);\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\nconst store = configureStore({\r\n    reducer: persistedReducer,\r\n    devTools: process.env.NODE_ENV === 'development', /// devtools only in developmetn\r\n    middleware,\r\n})\r\nconst persistor=persistStore(store)\r\nexport default { store, persistor };","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport store from './redux/store'\r\nimport { Provider } from 'react-redux'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <App />\r\n        </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__3PXB6\",\"button\":\"ContactForm_button__1pmdX\"};"],"sourceRoot":""}